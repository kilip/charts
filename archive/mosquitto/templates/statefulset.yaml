apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "mosquitto.fullname" . }}
  labels:
    {{- include "mosquitto.labels" . | nindent 4 }}
  annotations:
  {{- with .Values.podAnnotations }}
  {{- toYaml . | nindent 8 }}
  {{- end }}
    checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "mosquitto.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "mosquitto.name" . }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "mosquitto.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "mosquitto.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- with .Values.ports }}
          ports:
          {{- range $key, $value := . }}
            - name: {{ $key }}
              containerPort: {{ $value.port }}
              protocol: {{ default "TCP" $value.protocol }}
          {{- end }}
        {{- end }}
          volumeMounts:
            - name: config
              mountPath: /mosquitto/config
            - name: data
              mountPath: /mosquitto/data
          {{- if .Values.auth }}
            - name: password
              mountPath: /mosquitto/auth
          {{- end }}
          {{- range .Values.customVolumes }}
            - name: {{ .name }}
              mountPath: {{ .mountPath }}
          {{- end }}
          livenessProbe:
            tcpSocket:
              port: {{default "mqtt" .Values.livenessProbePort}}
            initialDelaySeconds: 5
            periodSeconds: 1
          readinessProbe:
            tcpSocket:
              port: {{default "mqtt" .Values.readinessProbePort}}
            initialDelaySeconds: 3
            periodSeconds: 3
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "mosquitto.fullname" . }}
      {{- if .Values.auth }}
        - name: password
          secret:
            secretName: "{{.Values.auth.secretName}}"
      {{- end }}
      {{- if not .Values.persistence.enabled }}
        - name: data
          emptyDir: {}
      {{- end }}
      {{- if and .Values.persistence.enabled .Values.persistence.existingClaim }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
      {{- end }}
      {{- range .Values.customVolumes }}
        - name: {{ .name }}
          {{- toYaml .volume | nindent 10 }}
      {{- end }}


  volumeClaimTemplates:
  {{- if and .Values.persistence.enabled (not .Values.persistence.existingClaim) }}
  - metadata:
      name: data
      labels:
        app.kubernetes.io/name: {{ include "mosquitto.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    {{- if .Values.persistence.annotations }}
      annotations:
    {{ toYaml .Values.persistence.annotations | indent 4 }}
    {{- end }}
    spec:
      accessModes: [ {{ .Values.persistence.accessMode | quote }} ]
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
    {{- if .Values.persistence.storageClass }}
    {{- if (eq "-" .Values.persistence.storageClass) }}
      storageClassName: ""
    {{- else }}
      storageClassName: {{ .Values.persistence.storageClass | quote }}
    {{- end }}
    {{- end }}
  {{- end }}
