apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "openhab.fullname" . }}
  labels:
    {{- include "openhab.labels" . | nindent 4 }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
{{- end }}
  selector:
    matchLabels:
      {{- include "openhab.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "openhab.name" . }}  
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "openhab.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "openhab.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      dnsConfig:
        options:
        - name: ndots
          value: "1"
      volumes:
        - name: init-scripts
          configMap:
            name: {{ include "openhab.fullname" . }}-init-scripts
            defaultMode: 0777
      {{- if and .Values.gitConfig.enabled .Values.gitConfig.secretName }}
        - name: git-secret
          secret:
            secretName: {{ .Values.gitConfig.secretName }}
            defaultMode: 0400
      {{- end }}
      {{- if not .Values.persistence.enabled }}
        - name: data
          emptyDir: {}
      {{- end }}
      {{- if and .Values.persistence.enabled .Values.persistence.existingClaim }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
      {{- end }}

      {{- if .Values.gitConfig.enabled }}
      initContainers:
        - name: openhab-config
          image: k8s.gcr.io/git-sync:v3.1.5
          imagePullPolicy: IfNotPresent
          volumeMounts:
          - name: data
            mountPath: /data
          {{- if .Values.gitConfig.secretName }}
          - name: git-secret
            mountPath: /etc/git-secret
          {{- end }}
          env:
            - name: GIT_SYNC_REPO
              value: "{{ .Values.gitConfig.repoUrl }}"
            - name: GIT_SYNC_BRANCH
              value: {{ .Values.gitConfig.branch | quote }}
            - name: GIT_SYNC_DEPTH
              value: "1"
            - name: GIT_SYNC_ROOT
              value: /data
            - name: GIT_SYNC_DEST
              value: config
            - name: GIT_SYNC_SSH
              value: "true"
            - name: GIT_KNOWN_HOSTS
              value: "false"
            - name: GIT_SYNC_PERMISSION
              value: "0775"
            - name: GIT_SYNC_SUBMODULES
              value: "off"
            - name: GIT_SYNC_ONE_TIME
              value: "true"
          securityContext:
            runAsUser: 0
      {{- end }}

      # main container
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          {{- if .Values.openhabCloudSecretName }}
            - name: OPENHAB_CLOUD_UUID
              valueFrom:
                secretKeyRef:
                  name: "{{.Values.openhabCloudSecretName}}"
                  key: "uuid"
            - name: OPENHAB_CLOUD_SECRET
              valueFrom:
                secretKeyRef:
                  name: "{{.Values.openhabCloudSecretName}}"
                  key: "secret"
          {{- end }}
            - name: OPENHAB_CONF
              valueFrom:
                configMapKeyRef:
                  name: "openhab"
                  key: "OPENHAB_CONF"
            - name: OPENHAB_USERDATA
              valueFrom:
                configMapKeyRef:
                  name: "openhab"
                  key: "OPENHAB_USERDATA"
            - name: USER_ID
              valueFrom:
                configMapKeyRef:
                  name: "openhab"
                  key: "USER_ID"
            - name: GROUP_ID
              valueFrom:
                configMapKeyRef:
                  name: "openhab"
                  key: "GROUP_ID"
            - name: OPENHAB_HTTP_PORT
              valueFrom:
                configMapKeyRef:
                  name: "openhab"
                  key: "OPENHAB_HTTP_PORT"
            - name: OPENHAB_HTTPS_PORT
              valueFrom:
                configMapKeyRef:
                  name: "openhab"
                  key: "OPENHAB_HTTPS_PORT"
            - name: EXTRA_JAVA_OPTS
              value: "-Duser.timezone={{ .Values.environment.timezone }}"
          ports:
            - name: http
              containerPort: {{.Values.environment.OPENHAB_HTTP_PORT}}
              protocol: TCP
            - name: https
              containerPort: {{.Values.environment.OPENHAB_HTTPS_PORT}}
              protocol: TCP
            - name: ssh
              containerPort: 8101
              protocol: TCP
            - name: lsp
              containerPort: 5007
              protocol: TCP
          volumeMounts:
            - name: data
              mountPath: /data
            - name: init-scripts
              mountPath: /etc/cont-init.d
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 300
            timeoutSeconds: 2
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 300
            timeoutSeconds: 2
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
  {{- if and .Values.persistence.enabled (not .Values.persistence.existingClaim) }}
  - metadata:
      name: data
      labels:
        app.kubernetes.io/name: {{ include "openhab.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
    {{- if .Values.persistence.annotations }}
      annotations:
    {{ toYaml .Values.persistence.annotations | indent 4 }}
    {{- end }}
    spec:
      accessModes: [ {{ .Values.persistence.accessMode | quote }} ]
      resources:
        requests:
          storage: {{ .Values.persistence.size | quote }}
    {{- if .Values.persistence.storageClass }}
    {{- if (eq "-" .Values.persistence.storageClass) }}
      storageClassName: ""
    {{- else }}
      storageClassName: {{ .Values.persistence.storageClass | quote }}
    {{- end }}
    {{- end }}
  {{- end }}
